@using System.ComponentModel.DataAnnotations
@using ScoreTracker.Domain.Enums
@using ScoreTracker.Domain.Records
@using ScoreTracker.Domain.ValueTypes
@using Align = MudBlazor.Align
@namespace ScoreTracker.Web.Components
<MudTooltip Text=@(ShowTextAsTooltip?Text:ShowScore && string.IsNullOrWhiteSpace(Text)?RankingString:ScoreString) ShowOnFocus="true">
        
    @if (Score != null)
    {
        <MudImage tabindex="0" Src="@LetterGradeImage" Height="@Height" ObjectFit="ObjectFit.ScaleDown"></MudImage>

    }
    @if (Plate != null)
    {
        <MudImage tabindex="0" Src="@PlateImage" Height="@Height" ObjectFit="ObjectFit.ScaleDown"></MudImage>

    }
    @if (ShowScore && Score!=null && string.IsNullOrWhiteSpace(Text))
    {
        <MudText tabindex="0" Align="Align.Center" Style=@(OneLine?$"{RankingColor}display:inline;padding-left:5px;vertical-align:top;":$"{RankingColor}vertical-align:top;")>
            @ScoreString
        </MudText>
    }
    @if (!string.IsNullOrWhiteSpace(Text) && !ShowTextAsTooltip)
    {
        <MudText tabindex="0" Align="Align.Center" Style=@(OneLine?$"{RankingColor}display:inline;padding-left:5px;vertical-align:top;":$"{RankingColor}vertical-align:top;")>
            @Text
        </MudText>
    }
    
</MudTooltip>
@code {
    [Parameter]
    public PhoenixScore? Score { get; set; }

    [Parameter]
    public bool IsBroken { get; set; } = false;

    [Parameter]
    public int Height { get; set; } = 20;

    [Parameter] public PhoenixPlate? Plate { get; set; }

    [Parameter]
    public bool ShowScore { get; set; } = false;

    [Parameter]
    public string Text { get; set; } = string.Empty;

    [Parameter]
    public bool ShowTextAsTooltip { get; set; } = false;

    [Parameter]
    public bool OneLine { get; set; } = false;
    [Parameter]
    public ScoreRankingRecord? Ranking { get; set; }

    private string RankingColor  => Ranking==null?"":
        Ranking.Ranking <= .1 ? "color:#BDBDBD;" :
            Ranking.Ranking <= .25 ? "color:#FAFAFA;" :
                Ranking.Ranking <= .5 ? "color:#76FF03;" :
                    Ranking.Ranking <= .75 ? "color:#1565C0;" :
                        Ranking.Ranking <= .9 ? "color:#7E57C2;" :
                            Ranking.Ranking <= .99 ? "color:#EC407A;" :
                                "color:#FB8C00;";

    private string RankingString =>Ranking==null?"": $"{Ranking.Ranking * 100.0:N1}% of {Ranking.PlayerCount} Comparable Players";
    private string ScoreString => (Score == null ? "" : ((int)Score).ToString("N0"));
    private string BrokenPiece => IsBroken ? "_broken" : "";
    private string LetterGradeImage => 
        $"https://piuimages.arroweclip.se/letters/{Score?.LetterGrade.ToString().ToLower()}{BrokenPiece}.png";

    private string PlateImage => $"https://piuimages.arroweclip.se/plates/{Plate?.GetShorthand().ToLower()}.png";

}
